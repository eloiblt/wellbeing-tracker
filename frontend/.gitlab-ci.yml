stages:
  - Build development
  - Build qa
  - Build staging
  - Run Tests
  - Build production
  - Deploy development
  - Deploy qa
  - Deploy staging
  - Deploy production
  - Checkmarx Code Security Scan
  - CxSCA Checkmarx Scan

variables:
  APP_GROUP: nrt

include:
  - project: network-ssdlc/utils/ssdlc-ug-cxsca-integration
    ref: main
    file: cxsca-scan.yml

.build_template:
  needs: []
  tags:
    - shell
    - gasp
    - openshift
  script:
    - podman build -t ${DOCKER_REGISTRY}/${PROJECT_DIRECTORY}/${PROJECT_NAME}:${CI_COMMIT_SHORT_SHA} -f ./deployment/docker/${DOCKERFILE_PREFIX}.Dockerfile .
    - echo ${REGISTRY_PWD} | podman login --username ${REGISTRY_USER} --password-stdin ${DOCKER_REGISTRY}
    - podman push ${DOCKER_REGISTRY}/${PROJECT_DIRECTORY}/${PROJECT_NAME}:${CI_COMMIT_SHORT_SHA}
    - podman rmi ${DOCKER_REGISTRY}/${PROJECT_DIRECTORY}/${PROJECT_NAME}:${CI_COMMIT_SHORT_SHA}

Build Development:
  stage: Build development
  environment: development
  extends: .build_template
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME'
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - if: '$CI_COMMIT_BRANCH == "ci-test"'
      when: manual
  variables:
    DOCKER_REGISTRY: ${DOCKER_REGISTRY_DEV}
    DOCKERFILE_PREFIX: dev

Build QA:
  stage: Build qa
  environment: qa
  extends: .build_template
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - if: '$CI_COMMIT_BRANCH == "ci-test"'
      when: manual
  variables:
    DOCKER_REGISTRY: ${DOCKER_REGISTRY_QA}
    DOCKERFILE_PREFIX: qa

Build Staging:
  stage: Build staging
  environment: staging
  extends: .build_template
  rules:
    - if: $CI_COMMIT_TAG
    - if: '$CI_COMMIT_BRANCH == "ci-test"'
      when: manual
  variables:
    DOCKER_REGISTRY: ${DOCKER_REGISTRY_STAGING}
    DOCKERFILE_PREFIX: staging

Build Production:
  stage: Build production
  environment: production
  extends: .build_template
  rules:
    - if: $CI_COMMIT_TAG
    - if: '$CI_COMMIT_BRANCH == "ci-test"'
      when: manual
  variables:
    DOCKER_REGISTRY: ${DOCKER_REGISTRY_PROD}
    DOCKERFILE_PREFIX: production

.test_template:
  tags:
    - shell
    - gasp
    - openshift
  script:
    - podman build -t ${DOCKER_REGISTRY}/${PROJECT_DIRECTORY}/${PROJECT_NAME}:${CI_COMMIT_SHORT_SHA} -f ./deployment/docker/dev-test.Dockerfile .
  after_script:
    - podman rmi ${DOCKER_REGISTRY}/${PROJECT_DIRECTORY}/${PROJECT_NAME}:${CI_COMMIT_SHORT_SHA}
  coverage: '/All files\s*\|\s*(\d+(?:\.\d+)?)/'

Run Tests:
  stage: Run Tests
  environment: development
  needs: ["Build Development"]
  extends: .test_template
  variables:
    DOCKER_REGISTRY: ${DOCKER_REGISTRY_DEV}
    ENV: development
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME'
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - if: '$CI_COMMIT_BRANCH == "ci-test"'
      when: manual



.deploy_template:
  allow_failure: false
  tags:
    - gasp
    - openshift
    - shell
  script:
    - oc login --token=${OC_TOKEN} --server=${OC_SERVER} --insecure-skip-tls-verify=true
    - bash -e ./deployment/oc/deploy.sh
  variables:
    CRT_FILE: ./deployment/files/nrt.int.bell.ca.crt
    KEY_FILE: ./deployment/files/nrt.int.bell.ca.key

Deploy Development:
  stage: Deploy development
  environment: development
  needs: ["Build Development"]
  extends: .deploy_template
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - if: '$CI_COMMIT_BRANCH == "ci-test"'
      when: manual
  variables:
    ENV: development
    OC_SERVER: "${OC_SERVER_DEV}"
    OC_TOKEN: "${OC_TOKEN_DEV}"
    REGISTRY_NAME: "${DOCKER_REGISTRY_DEV}"

Deploy QA:
  stage: Deploy qa
  environment: qa
  needs: ["Build QA"]
  extends: .deploy_template
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - if: '$CI_COMMIT_BRANCH == "ci-test"'
      when: manual
  variables:
    ENV: qa
    OC_SERVER: "${OC_SERVER_DEV}"
    OC_TOKEN: "${OC_TOKEN_QA}"
    REGISTRY_NAME: "${DOCKER_REGISTRY_QA}"

Deploy Staging:
  stage: Deploy staging
  environment: staging
  needs: ["Build Staging"]
  extends: .deploy_template
  rules:
    - if: $CI_COMMIT_TAG
    - if: '$CI_COMMIT_BRANCH == "ci-test"'
      when: manual
  variables:
    ENV: staging
    OC_SERVER: "${OC_SERVER_DEV}"
    OC_TOKEN: "${OC_TOKEN_STG}"
    REGISTRY_NAME: "${DOCKER_REGISTRY_STAGING}"

Deploy Production:
  stage: Deploy production
  environment: production
  needs: ["Build Production"]
  extends: .deploy_template
  rules:
    - if: $CI_COMMIT_TAG
      when: manual
    - if: '$CI_COMMIT_BRANCH == "ci-test"'
      when: manual
  variables:
    ENV: production
    OC_SERVER: "${OC_SERVER_PRD}"
    OC_TOKEN: "${OC_TOKEN_PRD}"
    REGISTRY_NAME: "${DOCKER_REGISTRY_PROD}"

.sast_template:
  image: gasp-docker-prod.artifactory.int.bell.ca/checkmarx-cli:1.0.1
  before_script:
    - export SAST_PRESET="${SAST_PRESET:-Bell Web}"
    - export SAST_EXCLUDED_PATH="${SAST_EXCLUDED_PATH:-*test*,log*,target*,node_modules*,bower_components*,dist*,.m2/*}"
    - export SAST_EXCLUDED_FILES="${SAST_EXCLUDED_FILES:-**\*.properties,**\*.class}"
    - export SAST_REPORT_FORMAT="${SAST_REPORT_FORMAT:-xml}"
    - export SAST_PASSWORD=$(echo ${SAST_PASSWORD} | base64 -d)
    - if [ "$SAST_INCREMENTAL" == "true" ]; then export SAST_INCREMENTAL_FLAG="-incremental"; fi 
  script:
    - sh /opt/checkmarx/runCxConsole.sh scan -v -projectname "${SAST_TEAM}\\${SAST_PROJECT_NAME}" -cxserver https://${SAST_SERVER} -cxuser ${SAST_USER} -cxpassword "${SAST_PASSWORD}" -locationtype folder -locationpath `pwd`/ -LocationFilesExclude ${SAST_EXCLUDED_FILES} -locationPathExclude ${SAST_EXCLUDED_PATH}  -preset "${SAST_PRESET}"  ${SAST_INCREMENTAL_FLAG} -report${SAST_REPORT_FORMAT} `pwd`/cxreport.${SAST_REPORT_FORMAT}
  artifacts:
    paths:
      - cxreport.*
    expire_in: 1 week
    
Scan with Checkmarx:
  stage: Checkmarx Code Security Scan
  extends: .sast_template
  needs: []
  tags:
    - openshift
    - gasp
    - docker
  variables:
    SAST_PROJECT_NAME: "${CI_PROJECT_NAME}"
    SAST_TEAM: "${CHECKMARX_TEAM}"
    SAST_SERVER: "${CHECKMARX_SERVER}"
    SAST_USER: "${CHECKMARX_USER}"
    SAST_PASSWORD: "${CHECKMARX_PASSWORD}"
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - if: '$CI_COMMIT_BRANCH =~ /^.*checkmarx.*$/'
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME'
    - if: '$CI_COMMIT_BRANCH == "ci-test"'
      when: manual

cxsca-scan:
  stage: CxSCA Checkmarx Scan
  needs: []
  tags:
    - gasp
    - openshift
    - docker
  variables:
    CX_BARCODE: "${CX_BARCODE}"
    SCA_TEAM: "${SCA_TEAM}"
    SCA_USER: "${SCA_USER}"
    SCA_PASSWORD: "${SCA_PASSWORD}"
    CI_PROJECT_NAME: "${CI_PROJECT_NAME}"
  extends: .sca_template 
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - if: '$CI_COMMIT_BRANCH =~ /^.*checkmarx.*$/'
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME'
      when: always
    - if: '$CI_COMMIT_BRANCH == "ci-test"'
      when: manual